# coding: utf-8

"""
    Entrata APIs

    The Entrata API retrieves property data for marketing, leasing, residents, and more. Our API is organized around RPC protocols, and authenticates users by API key. Additionally, users can only access the API when companies explicitly provide access per user.  ### Time Zones Please note that unless stated otherwise, all dates and times used in the API are assumed to be in Mountain Time (MST or MDT).  ### Languages The `Accept-Language` request header parameter can be used to request that the values returned in the response be translated into the language and locale that is desired, provided that the language is active and enabled for the client. Possible values are: - English: en-US, en-CA, en-GB, en-IE - Spanish: es-MX, es-PE, es-US, es-ES, es-CL   - Hindi: hi-IN - Chinese: zh-CN - French: fr-FR  ### Throttling To maintain a reliable API, Entrata implements rate limits, which restrict the number of API calls you can make within a minute, an hour, and a day. Each API service has its own set of limits, which are detailed in its response headers. Before building your integration, please familiarize yourself with these limits to avoid issues as you scale your usage with more properties or larger clients. 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_amenities_success_response_result_amenities_floorplan_amenities import GetAmenitiesSuccessResponseResultAmenitiesFloorplanAmenities

class TestGetAmenitiesSuccessResponseResultAmenitiesFloorplanAmenities(unittest.TestCase):
    """GetAmenitiesSuccessResponseResultAmenitiesFloorplanAmenities unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetAmenitiesSuccessResponseResultAmenitiesFloorplanAmenities:
        """Test GetAmenitiesSuccessResponseResultAmenitiesFloorplanAmenities
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetAmenitiesSuccessResponseResultAmenitiesFloorplanAmenities`
        """
        model = GetAmenitiesSuccessResponseResultAmenitiesFloorplanAmenities()
        if include_optional:
            return GetAmenitiesSuccessResponseResultAmenitiesFloorplanAmenities(
                amenity = openapi_client.models.get_amenities_success_response_result_amenities_floorplan_amenities_amenity.getAmenitiesSuccessResponse_result_Amenities_FloorplanAmenities_Amenity(
                    name = 'Additional Storage', 
                    image_url = 'https://medialibrarycdn.entrata.com/media_library/235/5b8f9615c76a41.21527630540.jpg', 
                    description = 'Floorplan Amenity', 
                    floorplans = openapi_client.models.get_amenities_success_response_result_amenities_floorplan_amenities_amenity_floorplans.getAmenitiesSuccessResponse_result_Amenities_FloorplanAmenities_Amenity_Floorplans(
                        floorplan = openapi_client.models.get_amenities_success_response_result_amenities_floorplan_amenities_amenity_floorplans_floorplan.getAmenitiesSuccessResponse_result_Amenities_FloorplanAmenities_Amenity_Floorplans_Floorplan(
                            rates = openapi_client.models.get_amenities_success_response_result_amenities_floorplan_amenities_amenity_floorplans_floorplan_rates.getAmenitiesSuccessResponse_result_Amenities_FloorplanAmenities_Amenity_Floorplans_Floorplan_Rates(
                                rate = openapi_client.models.get_amenities_success_response_result_amenities_floorplan_amenities_amenity_floorplans_floorplan_rates_rate.getAmenitiesSuccessResponse_result_Amenities_FloorplanAmenities_Amenity_Floorplans_Floorplan_Rates_Rate(
                                    @attributes = openapi_client.models.get_amenities_success_response_result_amenities_floorplan_amenities_amenity_floorplans_floorplan_rates_rate__attributes.getAmenitiesSuccessResponse_result_Amenities_FloorplanAmenities_Amenity_Floorplans_Floorplan_Rates_Rate__attributes(
                                        ar_code_id = '149655', 
                                        ar_code_type_id = '2', 
                                        charge_type_id = '303', 
                                        amount = '$100.00', 
                                        is_published = '1', 
                                        is_active = '1', 
                                        lease_term_id = '18414', 
                                        lease_start_window_id = '12345', ), ), ), 
                            @attributes = openapi_client.models.get_amenities_success_response_result_amenities_floorplan_amenities_amenity_floorplans_floorplan__attributes.getAmenitiesSuccessResponse_result_Amenities_FloorplanAmenities_Amenity_Floorplans_Floorplan__attributes(
                                property_floorplan_id = '00000', 
                                external_id = '123456', 
                                is_optional = '0', 
                                is_published = '1', 
                                is_featured = '0', ), ), ), 
                    @attributes = openapi_client.models.get_amenities_success_response_result_amenities_floorplan_amenities_amenity__attributes.getAmenitiesSuccessResponse_result_Amenities_FloorplanAmenities_Amenity__attributes(
                        id = '0000', ), )
            )
        else:
            return GetAmenitiesSuccessResponseResultAmenitiesFloorplanAmenities(
                amenity = openapi_client.models.get_amenities_success_response_result_amenities_floorplan_amenities_amenity.getAmenitiesSuccessResponse_result_Amenities_FloorplanAmenities_Amenity(
                    name = 'Additional Storage', 
                    image_url = 'https://medialibrarycdn.entrata.com/media_library/235/5b8f9615c76a41.21527630540.jpg', 
                    description = 'Floorplan Amenity', 
                    floorplans = openapi_client.models.get_amenities_success_response_result_amenities_floorplan_amenities_amenity_floorplans.getAmenitiesSuccessResponse_result_Amenities_FloorplanAmenities_Amenity_Floorplans(
                        floorplan = openapi_client.models.get_amenities_success_response_result_amenities_floorplan_amenities_amenity_floorplans_floorplan.getAmenitiesSuccessResponse_result_Amenities_FloorplanAmenities_Amenity_Floorplans_Floorplan(
                            rates = openapi_client.models.get_amenities_success_response_result_amenities_floorplan_amenities_amenity_floorplans_floorplan_rates.getAmenitiesSuccessResponse_result_Amenities_FloorplanAmenities_Amenity_Floorplans_Floorplan_Rates(
                                rate = openapi_client.models.get_amenities_success_response_result_amenities_floorplan_amenities_amenity_floorplans_floorplan_rates_rate.getAmenitiesSuccessResponse_result_Amenities_FloorplanAmenities_Amenity_Floorplans_Floorplan_Rates_Rate(
                                    @attributes = openapi_client.models.get_amenities_success_response_result_amenities_floorplan_amenities_amenity_floorplans_floorplan_rates_rate__attributes.getAmenitiesSuccessResponse_result_Amenities_FloorplanAmenities_Amenity_Floorplans_Floorplan_Rates_Rate__attributes(
                                        ar_code_id = '149655', 
                                        ar_code_type_id = '2', 
                                        charge_type_id = '303', 
                                        amount = '$100.00', 
                                        is_published = '1', 
                                        is_active = '1', 
                                        lease_term_id = '18414', 
                                        lease_start_window_id = '12345', ), ), ), 
                            @attributes = openapi_client.models.get_amenities_success_response_result_amenities_floorplan_amenities_amenity_floorplans_floorplan__attributes.getAmenitiesSuccessResponse_result_Amenities_FloorplanAmenities_Amenity_Floorplans_Floorplan__attributes(
                                property_floorplan_id = '00000', 
                                external_id = '123456', 
                                is_optional = '0', 
                                is_published = '1', 
                                is_featured = '0', ), ), ), 
                    @attributes = openapi_client.models.get_amenities_success_response_result_amenities_floorplan_amenities_amenity__attributes.getAmenitiesSuccessResponse_result_Amenities_FloorplanAmenities_Amenity__attributes(
                        id = '0000', ), ),
        )
        """

    def testGetAmenitiesSuccessResponseResultAmenitiesFloorplanAmenities(self):
        """Test GetAmenitiesSuccessResponseResultAmenitiesFloorplanAmenities"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
