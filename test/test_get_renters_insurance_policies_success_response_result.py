# coding: utf-8

"""
    Entrata APIs

    The Entrata API retrieves property data for marketing, leasing, residents, and more. Our API is organized around RPC protocols, and authenticates users by API key. Additionally, users can only access the API when companies explicitly provide access per user.  ### Time Zones Please note that unless stated otherwise, all dates and times used in the API are assumed to be in Mountain Time (MST or MDT).  ### Languages The `Accept-Language` request header parameter can be used to request that the values returned in the response be translated into the language and locale that is desired, provided that the language is active and enabled for the client. Possible values are: - English: en-US, en-CA, en-GB, en-IE - Spanish: es-MX, es-PE, es-US, es-ES, es-CL   - Hindi: hi-IN - Chinese: zh-CN - French: fr-FR  ### Throttling To maintain a reliable API, Entrata implements rate limits, which restrict the number of API calls you can make within a minute, an hour, and a day. Each API service has its own set of limits, which are detailed in its response headers. Before building your integration, please familiarize yourself with these limits to avoid issues as you scale your usage with more properties or larger clients. 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_renters_insurance_policies_success_response_result import GetRentersInsurancePoliciesSuccessResponseResult

class TestGetRentersInsurancePoliciesSuccessResponseResult(unittest.TestCase):
    """GetRentersInsurancePoliciesSuccessResponseResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetRentersInsurancePoliciesSuccessResponseResult:
        """Test GetRentersInsurancePoliciesSuccessResponseResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetRentersInsurancePoliciesSuccessResponseResult`
        """
        model = GetRentersInsurancePoliciesSuccessResponseResult()
        if include_optional:
            return GetRentersInsurancePoliciesSuccessResponseResult(
                lease_application = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication(
                    property = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_property.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Property(
                        identification = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_property_identification.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Property_Identification(
                            id_value = '42420', 
                            organization_name = '651', 
                            @attributes = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_property_identification__attributes.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Property_Identification__attributes(
                                id_type = 'Property ID', 
                                id_rank = 'primary', 
                                id_scope_type = 'sender', ), ), 
                        marketing_name = 'AuraCorp2 - Crystal', 
                        address = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_property_address.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Property_Address(
                            description = 'Primary address', 
                            address = '500 S, 100 W, 100k', 
                            city = 'Provo', 
                            state = 'UT', 
                            postal_code = '84601', 
                            country = 'US', 
                            @attributes = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_property_address__attributes.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Property_Address__attributes(
                                address_type = 'other', ), ), ), 
                    tenant = [
                        openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_tenant_inner.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Tenant_inner(
                            identification = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_tenant_inner_identification.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Tenant_inner_Identification(
                                id_value = '6720012', 
                                @attributes = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_tenant_inner_identification__attributes.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Tenant_inner_Identification__attributes(
                                    id_type = 'Customer ID', 
                                    id_rank = 'primary', 
                                    id_scope_type = 'sender', ), ), 
                            lease_id = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_tenant_inner_lease_id.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Tenant_inner_LeaseID(
                                id_value = '5545944', 
                                @attributes = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_tenant_inner_lease_id__attributes.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Tenant_inner_LeaseID__attributes(
                                    id_type = 'Lease ID', 
                                    id_rank = 'primary', 
                                    id_scope_type = 'sender', ), ), 
                            name = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_tenant_inner_name.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Tenant_inner_Name(
                                first_name = 'FirstName', 
                                last_name = 'LastName', ), 
                            residence = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_tenant_inner_residence.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Tenant_inner_Residence(
                                address = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_tenant_inner_residence_address.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Tenant_inner_Residence_Address(
                                    address = '500 S, 100 W, 100k', 
                                    city = 'Provo', 
                                    state = 'UT', 
                                    postal_code = '84601', 
                                    country_name = 'US', 
                                    email = 'nmohite_x.lc@r.com', 
                                    @attributes = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_tenant_inner_residence_address__attributes.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Tenant_inner_Residence_Address__attributes(
                                        address_type = 'current', ), ), ), 
                            phone = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_tenant_inner_phone.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Tenant_inner_Phone(
                                phone_number = '1112223333', 
                                @attributes = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_tenant_inner_phone__attributes.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Tenant_inner_Phone__attributes(
                                    phone_type = 'personal', ), ), 
                            @attributes = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_tenant_inner__attributes.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Tenant_inner__attributes(
                                resident_type = 'Primary', ), )
                        ], 
                    la_lease = [
                        openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_la_lease_inner.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_LA_Lease_inner(
                            identification = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_la_lease_inner_identification.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_LA_Lease_inner_Identification(
                                id_value = '5545944', 
                                @attributes = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_la_lease_inner_identification__attributes.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_LA_Lease_inner_Identification__attributes(
                                    id_type = 'Lease ID', 
                                    id_rank = 'primary', 
                                    id_scope_type = 'sender', ), ), 
                            status = openapi_client.models.get_mits_leases_success_response_response_result_lease_application_la_lease_inner_status.getMitsLeasesSuccessResponse_response_result_LeaseApplication_LA_Lease_inner_Status(
                                approval_status = 'Current', ), 
                            unit = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_la_lease_inner_unit.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_LA_Lease_inner_Unit(
                                identification = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_la_lease_inner_unit_identification.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_LA_Lease_inner_Unit_Identification(
                                    id_value = '2512028', 
                                    @attributes = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_la_lease_inner_unit_identification__attributes.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_LA_Lease_inner_Unit_Identification__attributes(
                                        id_type = 'Property Unit Id', 
                                        id_rank = 'primary', 
                                        id_scope_type = 'sender', ), ), 
                                marketing_name = 'UK16', 
                                unit_type = 'ZOM 2', 
                                unit_bedrooms = '2', 
                                unit_bathrooms = '2', 
                                square_foot_type = 'internal', 
                                unit_economic_status = 'residential', 
                                unit_leased_status = 'leased', 
                                number_occupants = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_la_lease_inner_unit_number_occupants.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_LA_Lease_inner_Unit_NumberOccupants(
                                    @value = '4', 
                                    @attributes = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_la_lease_inner_unit_number_occupants__attributes.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_LA_Lease_inner_Unit_NumberOccupants__attributes(
                                        total = '4', ), ), 
                                building_name = 'BUL113', ), 
                            insurance_policies = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_la_lease_inner_insurance_policies.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_LA_Lease_inner_InsurancePolicies(
                                insurance_policy = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_la_lease_inner_insurance_policies_insurance_policy.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_LA_Lease_inner_InsurancePolicies_InsurancePolicy(
                                    id = '110292', 
                                    name = 'Name', 
                                    unit_number = 'UK16', 
                                    lease_id = '5545944', 
                                    customer_id = '6720012', 
                                    policy_number = 'RLO1123001040', 
                                    start_date = '05/08/2016', 
                                    liability = '300000', 
                                    deductible = '80', 
                                    personal_contents = '50', 
                                    policy_type_id = 6, 
                                    policy_type_name = 'Affordable', ), ), )
                        ], )
            )
        else:
            return GetRentersInsurancePoliciesSuccessResponseResult(
                lease_application = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication(
                    property = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_property.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Property(
                        identification = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_property_identification.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Property_Identification(
                            id_value = '42420', 
                            organization_name = '651', 
                            @attributes = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_property_identification__attributes.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Property_Identification__attributes(
                                id_type = 'Property ID', 
                                id_rank = 'primary', 
                                id_scope_type = 'sender', ), ), 
                        marketing_name = 'AuraCorp2 - Crystal', 
                        address = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_property_address.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Property_Address(
                            description = 'Primary address', 
                            address = '500 S, 100 W, 100k', 
                            city = 'Provo', 
                            state = 'UT', 
                            postal_code = '84601', 
                            country = 'US', 
                            @attributes = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_property_address__attributes.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Property_Address__attributes(
                                address_type = 'other', ), ), ), 
                    tenant = [
                        openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_tenant_inner.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Tenant_inner(
                            identification = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_tenant_inner_identification.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Tenant_inner_Identification(
                                id_value = '6720012', 
                                @attributes = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_tenant_inner_identification__attributes.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Tenant_inner_Identification__attributes(
                                    id_type = 'Customer ID', 
                                    id_rank = 'primary', 
                                    id_scope_type = 'sender', ), ), 
                            lease_id = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_tenant_inner_lease_id.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Tenant_inner_LeaseID(
                                id_value = '5545944', 
                                @attributes = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_tenant_inner_lease_id__attributes.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Tenant_inner_LeaseID__attributes(
                                    id_type = 'Lease ID', 
                                    id_rank = 'primary', 
                                    id_scope_type = 'sender', ), ), 
                            name = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_tenant_inner_name.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Tenant_inner_Name(
                                first_name = 'FirstName', 
                                last_name = 'LastName', ), 
                            residence = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_tenant_inner_residence.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Tenant_inner_Residence(
                                address = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_tenant_inner_residence_address.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Tenant_inner_Residence_Address(
                                    address = '500 S, 100 W, 100k', 
                                    city = 'Provo', 
                                    state = 'UT', 
                                    postal_code = '84601', 
                                    country_name = 'US', 
                                    email = 'nmohite_x.lc@r.com', 
                                    @attributes = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_tenant_inner_residence_address__attributes.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Tenant_inner_Residence_Address__attributes(
                                        address_type = 'current', ), ), ), 
                            phone = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_tenant_inner_phone.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Tenant_inner_Phone(
                                phone_number = '1112223333', 
                                @attributes = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_tenant_inner_phone__attributes.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Tenant_inner_Phone__attributes(
                                    phone_type = 'personal', ), ), 
                            @attributes = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_tenant_inner__attributes.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_Tenant_inner__attributes(
                                resident_type = 'Primary', ), )
                        ], 
                    la_lease = [
                        openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_la_lease_inner.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_LA_Lease_inner(
                            identification = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_la_lease_inner_identification.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_LA_Lease_inner_Identification(
                                id_value = '5545944', 
                                @attributes = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_la_lease_inner_identification__attributes.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_LA_Lease_inner_Identification__attributes(
                                    id_type = 'Lease ID', 
                                    id_rank = 'primary', 
                                    id_scope_type = 'sender', ), ), 
                            status = openapi_client.models.get_mits_leases_success_response_response_result_lease_application_la_lease_inner_status.getMitsLeasesSuccessResponse_response_result_LeaseApplication_LA_Lease_inner_Status(
                                approval_status = 'Current', ), 
                            unit = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_la_lease_inner_unit.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_LA_Lease_inner_Unit(
                                identification = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_la_lease_inner_unit_identification.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_LA_Lease_inner_Unit_Identification(
                                    id_value = '2512028', 
                                    @attributes = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_la_lease_inner_unit_identification__attributes.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_LA_Lease_inner_Unit_Identification__attributes(
                                        id_type = 'Property Unit Id', 
                                        id_rank = 'primary', 
                                        id_scope_type = 'sender', ), ), 
                                marketing_name = 'UK16', 
                                unit_type = 'ZOM 2', 
                                unit_bedrooms = '2', 
                                unit_bathrooms = '2', 
                                square_foot_type = 'internal', 
                                unit_economic_status = 'residential', 
                                unit_leased_status = 'leased', 
                                number_occupants = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_la_lease_inner_unit_number_occupants.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_LA_Lease_inner_Unit_NumberOccupants(
                                    @value = '4', 
                                    @attributes = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_la_lease_inner_unit_number_occupants__attributes.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_LA_Lease_inner_Unit_NumberOccupants__attributes(
                                        total = '4', ), ), 
                                building_name = 'BUL113', ), 
                            insurance_policies = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_la_lease_inner_insurance_policies.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_LA_Lease_inner_InsurancePolicies(
                                insurance_policy = openapi_client.models.get_renters_insurance_policies_success_response_result_lease_application_la_lease_inner_insurance_policies_insurance_policy.getRentersInsurancePoliciesSuccessResponse_result_LeaseApplication_LA_Lease_inner_InsurancePolicies_InsurancePolicy(
                                    id = '110292', 
                                    name = 'Name', 
                                    unit_number = 'UK16', 
                                    lease_id = '5545944', 
                                    customer_id = '6720012', 
                                    policy_number = 'RLO1123001040', 
                                    start_date = '05/08/2016', 
                                    liability = '300000', 
                                    deductible = '80', 
                                    personal_contents = '50', 
                                    policy_type_id = 6, 
                                    policy_type_name = 'Affordable', ), ), )
                        ], ),
        )
        """

    def testGetRentersInsurancePoliciesSuccessResponseResult(self):
        """Test GetRentersInsurancePoliciesSuccessResponseResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
